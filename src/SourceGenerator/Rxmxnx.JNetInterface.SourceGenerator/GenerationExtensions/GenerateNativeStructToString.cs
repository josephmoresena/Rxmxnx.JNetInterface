using System;
using System.Runtime.CompilerServices;

using Microsoft.CodeAnalysis;

namespace Rxmxnx.JNetInterface.SourceGenerator;

internal static partial class GenerationExtensions
{
	private const String NativeToStringFormat = @"#nullable enable
// <auto-generated/>
namespace {0};

partial struct {1} 
{{
	/// <inheritdoc/>
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public override String ToString() => INativeType.ToString(this);
}}
#nullable restore";

	/// <summary>
	/// Generates overrides for <see cref="Object.ToString()"/> for natives structures.
	/// </summary>
	/// <param name="nativeSymbol">A type symbol of native structure.</param>
	/// <param name="context">Generation context.</param>
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static void GenerateNativeStructToString(this ISymbol nativeSymbol, GeneratorExecutionContext context)
	{
		String fileName = $"{nativeSymbol.Name}.ToString.g.cs";
		String source = String.Format(GenerationExtensions.NativeToStringFormat, nativeSymbol.ContainingNamespace,
		                              nativeSymbol.Name);
		context.AddSource(fileName, source);
	}
}